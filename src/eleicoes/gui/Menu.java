/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package eleicoes.gui;

import client.Vote;
import distributedMiner.RemoteObject;
import distributedMiner.blockchain.Block;
import distributedMiner.blockchain.BlockChain;
import distributedMiner.utils.Serializer;
import eleicoes.lib.Global;
import eleicoes.lib.Candidate;
import eleicoes.lib.Election;
import eleicoes.lib.Person;
import java.awt.Color;
import java.awt.Image;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.PrintWriter;
import java.lang.System.Logger;
import java.lang.System.Logger.Level;
import java.net.URI;
import java.net.URL;
import java.rmi.RemoteException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Random;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;

/**
 *
 * @author gonca
 */
public class Menu extends javax.swing.JFrame {

    /**
     * Creates new form Menu
     */
    public Menu() {
        initComponents();
        //**Iniciate setIcons to label's and buttons interface**//
        jButton6.setVisible(false);
         ImageIcon i = new javax.swing.ImageIcon(getClass().getResource("/resources/voting-box.png"));
         Image img = i.getImage().getScaledInstance(50, 50, Image.SCALE_SMOOTH);
        jButton2.setIcon(new ImageIcon(img));
         i = new javax.swing.ImageIcon(getClass().getResource("/resources/results.png"));
        img = i.getImage().getScaledInstance(50, 50, Image.SCALE_SMOOTH);
        jButton1.setIcon(new ImageIcon(img));
         i = new javax.swing.ImageIcon(getClass().getResource("/resources/config.png"));
        img = i.getImage().getScaledInstance(50, 50, Image.SCALE_SMOOTH);
        jButton3.setIcon(new ImageIcon(img));
         i = new javax.swing.ImageIcon(getClass().getResource("/resources/page.png"));
        img = i.getImage().getScaledInstance(50, 50, Image.SCALE_SMOOTH);
        jButton4.setIcon(new ImageIcon(img));
         i = new javax.swing.ImageIcon(getClass().getResource("/resources/add-user.png"));
        img = i.getImage().getScaledInstance(50, 50, Image.SCALE_SMOOTH);
        
        i = new javax.swing.ImageIcon(getClass().getResource("/resources/elections (1).png"));
        img = i.getImage().getScaledInstance(50, 50, Image.SCALE_SMOOTH);
        setIconImage(img);
        //**FINISHED**//
        
        
        //verify if the user is an administrator
        if (Global.isAdmin==true){
            //enable admin buttons
            jButton3.setVisible(true);
            jButton4.setVisible(true);
            jButton2.setEnabled(false);
        }else{
            //disable admin buttons
            jButton3.setVisible(false);
            jButton2.setEnabled(true);
            jButton4.setVisible(false);
            jButton6.setVisible(false);
            i = new javax.swing.ImageIcon(getClass().getResource(Global.loggedP.getImage()));
            img = i.getImage().getScaledInstance(100, 100, Image.SCALE_SMOOTH);
            jLabel2.setIcon(new ImageIcon(img));
            //write name and cc in menu labels
        jLabel6.setText(Global.loggedP.getName());
        jLabel7.setText(Global.loggedP.getCC());
        SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
        jLabel9.setText(formato.format(Global.loggedP.getDataNasc()));
        
        //write status of isVoted jLabel5
        if(Global.loggedP.getVoted()==false){
            jLabel5.setForeground(new Color(51,204,0));
            jLabel5.setText("Apto a Votar");
            jButton2.setEnabled(true);
        }else{
            jLabel5.setForeground(Color.red);
            jLabel5.setText("Já Votou");
            jButton2.setEnabled(false);
        }
        }
        //Verify finished
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        nameLabel = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        CCLabel = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Eleições by Costa & Diogo");
        setResizable(false);
        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                formFocusGained(evt);
            }
        });
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(0, 153, 153));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));

        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton1.setText("Resultados");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton2.setText("Votar");
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton3.setText("Adicionar Eleição");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setText("Menu");

        jButton4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton4.setText("Gerar Eleitores");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton6.setBackground(new java.awt.Color(255, 0, 0));
        jButton6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton6.setForeground(new java.awt.Color(255, 255, 255));
        jButton6.setText("Terminar Eleição");
        jButton6.setActionCommand("Gerar Pessoas");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(76, 76, 76)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel1)
                .addGap(31, 31, 31)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(72, 72, 72)
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        nameLabel.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        nameLabel.setText("Bem-vindo, ");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel3.setText("Estado:");

        CCLabel.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        CCLabel.setText("CC:");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(51, 204, 0));
        jLabel5.setText("Não Aplicável");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 51, 51));
        jLabel6.setText("Administrador");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(51, 51, 51));
        jLabel7.setText("Não Aplicável");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(51, 204, 0));
        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/portuguese-flag-8.gif"))); // NOI18N

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel4.setText("DataNasc:");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(51, 51, 51));
        jLabel9.setText("Não Aplicável");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel9))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(CCLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel7)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel5))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(nameLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel6))
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 465, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(63, 63, 63))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameLabel)
                    .addComponent(jLabel6))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(CCLabel)
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel9)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO addVoteToBlockChain your handling code here:
        try{
        //get the number of files into wikiElection
        String path = System.getProperty("user.dir") + File.separator + "wikiElection";
        File folder = new File(path);
        File[] files = folder.listFiles();
        int numbFiles = files.length;
        if(numbFiles==0){
            //is not created yet
            JOptionPane.showMessageDialog(null, "Ainda não foi criado nenhuma Eleição", "Atenção", JOptionPane.WARNING_MESSAGE);
        }else{
            //election exist
            new ResultList(this, true).setVisible(true);
            //open results form
        }
        }catch (Exception ex){
            System.out.println(ex.getMessage());
            JOptionPane.showMessageDialog(null, "Erro. Contacte o Administrador", "Exceção", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO addVoteToBlockChain your handling code here:
        new ConfigMenu(this,true).setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO addVoteToBlockChain your handling code here:
    }//GEN-LAST:event_formWindowOpened

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO addVoteToBlockChain your handling code here:
        
        try{
        if(Global.eleitoral.getName().equals("")){
            //is not created yet
            JOptionPane.showMessageDialog(null, "Ainda não foi criado nenhuma Eleição", "Atenção", JOptionPane.WARNING_MESSAGE);
        }else{
            //election exist
            Date today = new Date();
            if(today.after(Global.eleitoral.getDataI()) || today.equals(Global.eleitoral.getDataI()) ){
               //the data is correct
               if(Global.loggedP.getVoted()==true){
                //already voted
                JOptionPane.showMessageDialog(null, "Já utilizou o seu direito de votar", "Atenção", JOptionPane.WARNING_MESSAGE);
                jButton2.setEnabled(false);
                jLabel5.setForeground(Color.red);
                jLabel5.setText("Já Votou");
            }else{
                //can vote
                //open vote form
                new VoteMenu(this,true).setVisible(true);
            }
            }else{
                JOptionPane.showMessageDialog(null, "Ainda não abriram as eleições", "Atenção", JOptionPane.WARNING_MESSAGE);
            }
            
    }//GEN-LAST:event_jButton2ActionPerformed
    }catch(Exception ex){
            System.out.println(ex.getMessage());
            JOptionPane.showMessageDialog(null, "Erro. Contacte o Administrador", "Exceção", JOptionPane.ERROR_MESSAGE);
    }
    }
    
    private void formFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusGained
        // TODO addVoteToBlockChain your handling code here:
        
    }//GEN-LAST:event_formFocusGained

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO addVoteToBlockChain your handling code here:
        int result = JOptionPane.showConfirmDialog (null, "Terminar Sessão?","Confirmar",JOptionPane.YES_NO_OPTION);
        if(result==JOptionPane.YES_OPTION){
         new Verify().setVisible(true);
         Global.isAdmin=false;
         dispose();
        }else{
        }
    }//GEN-LAST:event_formWindowClosing

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO addVoteToBlockChain your handling code here:
        try{
            //election exist
            Person add = new Person();
            //apelidos list
            String path = System.getProperty("user.dir") + File.separator + "db" + File.separator + "apelidos.csv";
            File f = new File(path);            
            FileReader fr = new FileReader(f);
            BufferedReader br = new BufferedReader(fr);
            //save all lines in array
            ArrayList<String> apelidos = new ArrayList<>();
            String line;
            while((line = br.readLine()) != null) { apelidos.add(line); }
            //close File Reader
            fr.close();
            
            //male name list
            path = System.getProperty("user.dir") + File.separator + "db" + File.separator + "nomesmasculino.csv";
            f = new File(path);
            fr = new FileReader(f);
            br = new BufferedReader(fr);
            //save all lines in array
            ArrayList<String> nomesM = new ArrayList<>();
            line="";
            while((line = br.readLine()) != null) { nomesM.add(line); }
            //close File Reader
            fr.close();
            
            //female name list
            path = System.getProperty("user.dir") + File.separator + "db" + File.separator + "nomesfeminino.csv";
            f = new File(path);
            fr = new FileReader(f);
            br = new BufferedReader(fr);
            //save all lines in array
            ArrayList<String> nomesF = new ArrayList<>();
            line="";
            while((line = br.readLine()) != null) { nomesF.add(line); }
            //close File Reader
            fr.close();
            //final of lists
            
            for (int i = 0; i < 50; i++) {
                if(i>=25){
                    add=add.randomPerson('F',apelidos,nomesF);
                    if(add.getName().equals("")){
                        JOptionPane.showMessageDialog(null, "Erro ao adicionar Eleitor", "Atenção", JOptionPane.WARNING_MESSAGE);
                        break;
                    }else{
                        
                        //chaves
                        add.save(add.getPassword());
                        Global.eleitoral.addListElector(add);
                        System.out.println(add.getName());
                     //   JOptionPane.showMessageDialog(null, "Eleitor: "+addVoteToBlockChain.getName()+" adiconado com sucesso", "Confirmação", JOptionPane.INFORMATION_MESSAGE);
                    }
                }else{
                    add=add.randomPerson('M',apelidos,nomesM);
                    if(add.getName().equals("")){
                        JOptionPane.showMessageDialog(null, "Erro ao adicionar Eleitor", "Atenção", JOptionPane.WARNING_MESSAGE);
                        break;
                    }else{
                        
                        //chaves
                        add.save(add.getPassword());
                        Global.eleitoral.addListElector(add);
                        
                        System.out.println(add.getName());
                     //   JOptionPane.showMessageDialog(null, "Eleitor: "+addVoteToBlockChain.getName()+" adiconado com sucesso", "Confirmação", JOptionPane.INFORMATION_MESSAGE);
                    }
                }
            }
            JOptionPane.showMessageDialog(null, "Eleitores adiconados com sucesso", "Confirmação", JOptionPane.INFORMATION_MESSAGE);

        }catch(Exception ex){
            System.out.println(ex.getMessage());
            JOptionPane.showMessageDialog(null, "Erro. Contacte o Administrador", "Exceção", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
        // TODO addVoteToBlockChain your handling code here:
    }//GEN-LAST:event_formWindowGainedFocus

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO addVoteToBlockChain your handling code here:
        if(Global.isAdmin==true){
            if(Global.eleitoral.getName().equals("")){
                //is not created
            }else{
               jButton6.setVisible(true);
            
            }
        }else{
        if(Global.loggedP.getVoted()==true){
                //already voted
                jButton2.setEnabled(false);
                jLabel5.setForeground(Color.red);
                jLabel5.setText("Já Votou");
        }
        }
    }//GEN-LAST:event_formWindowActivated

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        
        try {
            BlockChain blockchain = Global.remote.getBlockchain();
            
            // Mapa para armazenar contagens de votos
            Map<String, Integer> contador = new HashMap<>();
            for(int i=1;i<blockchain.getChain().size();i++){
                // Bloco atual
                Block b = blockchain.getChain().get(i);
                List<String> lst = (List<String>) Serializer.base64ToObject(b.getData());
                StringBuilder txt = new StringBuilder(b.getInfo());
                 //iterar as transações
                for (String string : lst) {
                    //converter transacoes para tranfer
                   Vote t = (Vote) Serializer.base64ToObject(string);
                    // Atualiza a contagem no mapa
                    contador.put(t.getTo(), contador.getOrDefault(t.getTo(), 0) + 1);
                }
                
                // Escreve as contagens em um arquivo (exemplo)
                try (PrintWriter writer = new PrintWriter("contagem_votos.txt")) {
                    for (Map.Entry<String, Integer> entry : contador.entrySet()) {
                        writer.println(entry.getKey() + ": " + entry.getValue() + " votos");
                    }
                } catch (IOException e) {
                    e.printStackTrace(); // ou lide com a exceção conforme necessário
                }
            }
        } catch (RemoteException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
//        Date today = new Date();
//        if(today.after(Global.eleitoral.getDataI()) || today.equals(Global.eleitoral.getDataI()) && today.before(Global.eleitoral.getDataF()) || today.equals(Global.eleitoral.getDataF() )){
//           Global.eleitoral.setFinished(true);
//        //save all info in ficheiros
//        try {
//            //create new file
//            String newFileName = System.getProperty("user.dir") + File.separator + "wikiElection" + File.separator + Global.eleitoral.getName()+".txt";
//            new File(newFileName).createNewFile();
//            //write log in file
//            FileWriter writer = new FileWriter(newFileName);
//            writer.write(Global.eleitoral.getName()+"\n");
//            SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
//            writer.write(formato.format(Global.eleitoral.getDataI())+"\n");
//            writer.write(formato.format(Global.eleitoral.getDataF())+"\n");
//            writer.write("/resources/"+Global.eleitoral.getImage()+"\n");
//            writer.write(Global.eleitoral.isFinished()+"\n");
//            writer.write("-\n");
//            for (Person p : Global.eleitoral.getElector()){
//                writer.write(p.getName()+","+p.getCC()+","+p.getVoted()+","+formato.format(p.getDataNasc())+","+p.getImage()+","+p.getSexo()+"\n");
//            }
//            writer.write("*\n");
//            for (Candidate c : Global.eleitoral.getCandidate()){
//                writer.write(c.getName()+","+c.getAbv()+","+c.getImage()+"\n");
//            }
//            writer.write(".\n");
//           //total votes
//            writer.write(Global.eleitoral.getVotes().size()+"\n");
//           //total votes for all candidates
//           String winner = "Empate";
//           int max=0;
//           for (Candidate c: Global.eleitoral.getCandidate()){
//               int count=0;
//               for (String s:Global.eleitoral.getVotes()){
//                   if(s.equals(c.getAbv())){
//                       //have a vote in votes Array for 'c' candidate
//                       count+=1;
//                   }
//               }
//               writer.write(c.getAbv()+":"+count+"\n");
//               //finding the winner to write in file
//               if(count>max){
//                   max=count;
//                   winner = c.getName();
//               }else if(count==max && c.getAbv()!="VB"){
//                   winner="Empate";
//               }
//           }
//           //Only Blan Votes
//           int count=0;
//               for (String s:Global.eleitoral.getVotes()){
//                   if(s.equals("VB")){
//                       //have a vote in votes Array for 'c' candidate
//                       count+=1;
//                   }
//               }
//               writer.write("VB:"+count+"\n");
//               writer.write(winner);
//            writer.close();
//            Global.eleitoral= new Election();
//            JOptionPane.showMessageDialog(null,"Eleição terminada com sucesso");
//            jButton6.setVisible(false);
//        } catch (IOException ex) {
//            JOptionPane.showMessageDialog(this, ex.getMessage());
//        }             
//        }else{
//            JOptionPane.showMessageDialog(null,"A data de hoje não corresponde à data de fim.");
//        }
        
        
    }//GEN-LAST:event_jButton6ActionPerformed
    

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Menu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel CCLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel nameLabel;
    // End of variables declaration//GEN-END:variables
}
